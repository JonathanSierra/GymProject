/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package FormulariosInternos;

import Objetos.Membresia;
import Objetos.dbConnection;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Arce
 */
public class JiFrmReportesMembresias extends javax.swing.JInternalFrame {

    /**
     * Creates new form JiFrmReportesMembresias
     */
    ArrayList<Membresia> membresias;
    dbConnection conexion;
    public JiFrmReportesMembresias() {
        initComponents();
        conexion=new dbConnection();
        membresias=new ArrayList();
        llenarCombo();
        MostrarMiembro();
    }
    public void llenarCombo(){
        try(Connection con = DriverManager.getConnection(conexion.getUrl(),
                conexion.getUsername(), conexion.getPassword())){
            comboMembresias.removeAllItems();
            comboMembresias.addItem("Seleccione");
            membresias.clear();
            Statement stm = con.createStatement();
            String query ="call  MostrarMembresias()";
            ResultSet rs = stm.executeQuery(query);
            
            while(rs.next()){
                String nombre = rs.getString("nombre_membresia");
                int id = rs.getInt("id_membresia");
                int precio =rs.getInt("precio_membresia");
                int duracion=rs.getInt("duracion_membresia");
                membresias.add(new Membresia(id, nombre,precio,duracion));
                comboMembresias.addItem(nombre);
            }
            
        }catch(SQLException e){
            
        }
    }
      public void filtrar()
    {
        try(Connection con = DriverManager.getConnection(conexion.getUrl(),
                conexion.getUsername(), conexion.getPassword())){
            
            DefaultTableModel modelo = new DefaultTableModel();
            
            PreparedStatement pstmn = con.prepareCall("call mostrarMembresiaTipo(?)");
            pstmn.setInt(1, membresias.get(comboMembresias.getSelectedIndex()-1).getIdMembresia());
            
            ResultSet rs = pstmn.executeQuery();
            ResultSetMetaData rsmt = rs.getMetaData();
            
            for(int i = 1; i<=rsmt.getColumnCount(); i++){
                modelo.addColumn(rsmt.getColumnLabel(i));
            }
            
            while(rs.next()){
                Object[] filas = new Object[rsmt.getColumnCount()];
                for(int i = 1; i<=rsmt.getColumnCount(); i++){
                    filas[i-1] = rs.getObject(i);
                }
                modelo.addRow(filas);
            }
            tableMiembros.setModel(modelo);
            
            
    }catch(SQLException e){
            JOptionPane.showMessageDialog(rootPane, e.toString());
        }
    }
    
        public void MostrarMiembro(){
        try(Connection con = DriverManager.getConnection(conexion.getUrl(),conexion.getUsername(), conexion.getPassword()))
        {

            DefaultTableModel modelo = new DefaultTableModel();
            Statement stm = con.createStatement();
            String query = "call MostrarMembresias()";
            ResultSet rs = stm.executeQuery(query);
            ResultSetMetaData rsmt = rs.getMetaData();
    
            for(int i = 1; i<=rsmt.getColumnCount(); i++){
                modelo.addColumn(rsmt.getColumnLabel(i));
            }
            
            while(rs.next()){
                Object[] filas = new Object[rsmt.getColumnCount()];
                for(int i = 1; i<=rsmt.getColumnCount(); i++){
                    filas[i-1] = rs.getObject(i);
                }
                modelo.addRow(filas);
            }
            tableMiembros.setModel(modelo);
        }catch(SQLException e){
            JOptionPane.showMessageDialog(rootPane, e.toString());
        }
        
   }
    
    
  

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableMiembros = new javax.swing.JTable();
        btnFiltrar = new javax.swing.JButton();
        comboMembresias = new javax.swing.JComboBox<>();

        setClosable(true);
        setIconifiable(true);

        tableMiembros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tableMiembros);

        btnFiltrar.setText("Filtrar");
        btnFiltrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFiltrarActionPerformed(evt);
            }
        });

        comboMembresias.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 469, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(comboMembresias, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFiltrar, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 57, Short.MAX_VALUE)
                .addComponent(comboMembresias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnFiltrar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnFiltrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFiltrarActionPerformed
        // TODO add your handling code here:
        if(comboMembresias.getSelectedIndex()>0)
        {
            filtrar();
        }
        else
        {
            JOptionPane.showMessageDialog(rootPane, "Selecione una opcion ");
        }
        
    }//GEN-LAST:event_btnFiltrarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFiltrar;
    private javax.swing.JComboBox<String> comboMembresias;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableMiembros;
    // End of variables declaration//GEN-END:variables

}