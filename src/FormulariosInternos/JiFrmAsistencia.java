/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package FormulariosInternos;

import Objetos.Asistencia;
import Objetos.Cliente;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author xdand
 */
public class JiFrmAsistencia extends javax.swing.JInternalFrame {

    /**
     * Creates new form JiFrmAsistencia
     */
    String[] asistencias={"ID","Cecdula","Nombre","Entrada","Salida"};
    ArrayList<Cliente> registros;
    ArrayList<Asistencia> asistenciass;
    public JiFrmAsistencia(ArrayList<Cliente> registros) {
        initComponents();
        this.asistenciass=new ArrayList();
        this.registros=registros;
        llenarMiembros();
        mostrarAsistencias();
        
       
    }
    public void llenarMiembros()
    {
        comboMiembros.removeAllItems();
        comboMiembros.addItem("Seleccione un miembro");
        for (int i = 0; i < registros.size(); i++) {
            comboMiembros.addItem(registros.get(i).getNombre());
        }
    }
   public void entrada() {
    int item = comboMiembros.getSelectedIndex() - 1;

    if (comboMiembros.getSelectedIndex() > 0) {
        Cliente cliente = registros.get(item);

        if (!cliente.getEstadodePago().equalsIgnoreCase("pendiente")) {
         
            boolean dentro = false;
            for (int i=0;i<asistenciass.size();i++) {
                if (asistenciass.get(i).getCliente().getId() == cliente.getId() 
                        && asistenciass.get(i).getFechaSalida().isEmpty()
                        || asistenciass.get(i).getFechaSalida().equalsIgnoreCase("")) {
                    dentro = true;
                    break;
                }
            }

            if (dentro) {
                JOptionPane.showMessageDialog(rootPane, "El miembro ya está adentro");
            } else {
                // Crear nueva asistencia (solo entrada, sin salida)
                Asistencia nueva = new Asistencia(cliente); 
                asistenciass.add(nueva);
                mostrarAsistencias();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane,
                "Este miembro no puede entrar porque todavía no ha pagado");
        }
    }
}
   
   public void salida() {
    int item = comboMiembros.getSelectedIndex() - 1;

    if (comboMiembros.getSelectedIndex() > 0) {
        Cliente cliente = registros.get(item);

        boolean dentro = false;
        for (int i = 0; i < asistenciass.size(); i++) {
            

            if ( asistenciass.get(i).getCliente().getId() == cliente.getId()) {
                if ( asistenciass.get(i).getFechaSalida().isEmpty()) { 
                    
                    String fecha = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss")
                            .format(Calendar.getInstance().getTime());
                     asistenciass.get(i).setFechaSalida(fecha);
                    mostrarAsistencias();
                    dentro = true;
                    break;
                }
            }
        }

        if (!dentro) {
            JOptionPane.showMessageDialog(rootPane, 
                "Este miembro no ha entrado o ya salió");
        }
    }
}
        
    

    
     public void mostrarAsistencias(){
        DefaultTableModel modelo=new DefaultTableModel();
        modelo.setColumnIdentifiers(asistencias);
        for (int i = 0; i < asistenciass.size(); i++) {
            modelo.addRow(new Object[]
            {
                
                asistenciass.get(i).getCliente().getId(),
                asistenciass.get(i).getCliente().getCedula(),
                asistenciass.get(i).getCliente().getNombre(),
                asistenciass.get(i).getFecha(),
                asistenciass.get(i).getFechaSalida()
               
                
               
            });
            
        }
        tableAsistencias.setModel(modelo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableAsistencias = new javax.swing.JTable();
        comboMiembros = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);

        tableAsistencias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tableAsistencias);

        comboMiembros.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton1.setText("Entrada");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Salida");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 570, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(comboMiembros, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addComponent(comboMiembros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        entrada();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        salida();
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> comboMiembros;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableAsistencias;
    // End of variables declaration//GEN-END:variables
}
